"use client"

import type React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Mic, Wheat, Tractor } from "lucide-react"

interface LoginPageProps {
  onLogin: (name: string) => void
}

export default function LoginPage({ onLogin }: LoginPageProps) {
  const [name, setName] = useState("")
  const [mobile, setMobile] = useState("")
  const [language, setLanguage] = useState("english")

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    if (name.trim()) {
      onLogin(name.trim())
    }
  }

  const handleVoiceLogin = () => {
    // Placeholder for voice functionality
    alert("Voice login feature coming soon! / рдЖрд╡рд╛рдЬрд╝ рд▓реЙрдЧрд┐рди рдЬрд▓реНрдж рдЖ рд░рд╣рд╛ рд╣реИ!")
  }

  const getPlaceholderText = () => {
    switch (language) {
      case "hindi":
        return { name: "рдЖрдкрдХрд╛ рдирд╛рдо", mobile: "рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░", login: "рд▓реЙрдЧрд┐рди", voice: "рдЖрд╡рд╛рдЬрд╝ рд▓реЙрдЧрд┐рди" }
      case "tamil":
        return { name: "роЙроЩрпНроХро│рпН рокрпЖропро░рпН", mobile: "роорпКрокрпИро▓рпН роОрогрпН", login: "роЙро│рпНроирпБро┤рпИро╡рпБ", voice: "роХрпБро░ро▓рпН роЙро│рпНроирпБро┤рпИро╡рпБ" }
      case "bengali":
        return { name: "ржЖржкржирж╛рж░ ржирж╛ржо", mobile: "ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░", login: "рж▓ржЧржЗржи", voice: "ржнржпрж╝рзЗрж╕ рж▓ржЧржЗржи" }
      case "marathi":
        return { name: "рддреБрдордЪреЗ рдирд╛рд╡", mobile: "рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░", login: "рд▓реЙрдЧрд┐рди", voice: "рдЖрд╡рд╛рдЬ рд▓реЙрдЧрд┐рди" }
      case "gujarati":
        return { name: "ркдркорк╛рк░рлБркВ ркирк╛рко", mobile: "ркорлЛркмрк╛ркЗрк▓ ркиркВркмрк░", login: "рк▓рлЛркЧрк┐рки", voice: "рк╡рлЙркЗрк╕ рк▓рлЛркЧрк┐рки" }
      case "punjabi":
        return { name: "ридрйБри╣ри╛рибри╛ риири╛рио", mobile: "риорйЛримри╛риИри▓ риирй░римри░", login: "ри▓ри╛риЧриЗрии", voice: "риЖри╡ри╛риЬри╝ ри▓ри╛риЧриЗрии" }
      case "kannada":
        return { name: "р▓ир▓┐р▓ор│Нр▓о р▓╣р│Жр▓╕р▓░р│Б", mobile: "р▓ор│Кр▓мр│Ир▓▓р│Н р▓╕р▓Вр▓Цр│Нр▓пр│Ж", login: "р▓▓р▓╛р▓Чр▓┐р▓ир│Н", voice: "р▓зр│Нр▓╡р▓ир▓┐ р▓▓р▓╛р▓Чр▓┐р▓ир│Н" }
      case "telugu":
        return { name: "р░ор▒А р░кр▒Зр░░р▒Б", mobile: "р░ор▒Кр░мр▒Ир░▓р▒Н р░ир░Вр░мр░░р▒Н", login: "р░▓р░╛р░Чр░┐р░ир▒Н", voice: "р░╡р░╛р░пр░┐р░╕р▒Н р░▓р░╛р░Чр░┐р░ир▒Н" }
      case "bhojpuri":
        return { name: "рд░рд╛рдЙрд░ рдирд╛рдо", mobile: "рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░", login: "рд▓реЙрдЧрд┐рди", voice: "рдЖрд╡рд╛рдЬрд╝ рд▓реЙрдЧрд┐рди" }
      case "odia":
        return { name: "рмЖрмкрмгрмЩрнНрмХ рмирм╛рмо", mobile: "рморнЛрммрм╛рмЗрм▓рнН рмирморнНрммрм░", login: "рм▓рмЧрмЗрмирнН", voice: "рмнрмПрм╕рнН рм▓рмЧрмЗрмирнН" }
      default:
        return { name: "Your Name", mobile: "Mobile Number", login: "Login", voice: "Voice Login" }
    }
  }

  const placeholders = getPlaceholderText()

  return (
    <div className="min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-green-50 to-amber-50">
      <div className="fixed left-4 top-4">
        <Select value={language} onValueChange={setLanguage}>
          <SelectTrigger className="w-36 h-10 border-2 border-primary/20 bg-white/90 backdrop-blur-sm">
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="english">English</SelectItem>
            <SelectItem value="hindi">рд╣рд┐рдВрджреА</SelectItem>
            <SelectItem value="tamil">родрооро┐ро┤рпН</SelectItem>
            <SelectItem value="bengali">ржмрж╛ржВрж▓рж╛</SelectItem>
            <SelectItem value="marathi">рдорд░рд╛рдареА</SelectItem>
            <SelectItem value="gujarati">ркЧрлБркЬрк░рк╛ркдрлА</SelectItem>
            <SelectItem value="punjabi">рикрй░риЬри╛римрйА</SelectItem>
            <SelectItem value="kannada">р▓Хр▓ир│Нр▓ир▓б</SelectItem>
            <SelectItem value="telugu">р░др▒Жр░▓р▒Бр░Чр▒Б</SelectItem>
            <SelectItem value="bhojpuri">рднреЛрдЬрдкреБрд░реА</SelectItem>
            <SelectItem value="odia">рмУрмбрм╝рм┐рмЖ</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <Card className="w-full max-w-md border-2 border-primary shadow-2xl bg-white/95 backdrop-blur-sm">
        <CardHeader className="text-center space-y-4">
          <div className="flex justify-center">
            <div className="bg-primary/10 p-4 rounded-full">
              <Wheat className="h-12 w-12 text-primary" />
            </div>
          </div>
          <CardTitle className="text-3xl font-bold text-primary flex items-center justify-center gap-2">
            <Tractor className="h-8 w-8 text-amber-600" />
            <span className="bg-gradient-to-r from-green-600 to-amber-600 bg-clip-text text-transparent">annData</span>
            ЁЯМ╛
          </CardTitle>
          <div className="space-y-3">
            <p className="text-xl font-bold text-primary text-balance leading-relaxed">
              From Soil to Market тАУ All Guidance in One Place
            </p>
            <p className="text-xl font-bold text-foreground text-balance">
              Enter your details or use voice to login
              <br />
              <span className="text-lg font-semibold">рдЕрдкрдирд╛ рд╡рд┐рд╡рд░рдг рджрд░реНрдЬ рдХрд░реЗрдВ рдпрд╛ рдЖрд╡рд╛рдЬрд╝ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ</span>
            </p>
          </div>
        </CardHeader>
        <CardContent className="space-y-6">
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="relative">
              <Input
                type="tel"
                placeholder={`${placeholders.mobile} / Mobile Number`}
                value={mobile}
                onChange={(e) => setMobile(e.target.value)}
                className="h-16 text-lg border-2 border-primary/20 focus:border-primary pl-4"
                maxLength={10}
              />
            </div>
            <div className="relative">
              <Input
                type="text"
                placeholder={`${placeholders.name} / Your Name`}
                value={name}
                onChange={(e) => setName(e.target.value)}
                className="h-16 text-lg border-2 border-primary/20 focus:border-primary pl-12"
                required
              />
              <Mic className="absolute left-3 top-1/2 transform -translate-y-1/2 h-6 w-6 text-primary/60" />
            </div>
            <Button
              type="submit"
              className="w-full h-16 text-xl font-bold bg-primary hover:bg-primary/90"
              disabled={!name.trim()}
            >
              {placeholders.login} / Login
            </Button>
          </form>

          <div className="relative">
            <div className="absolute inset-0 flex items-center">
              <span className="w-full border-t border-border" />
            </div>
            <div className="relative flex justify-center text-xs uppercase">
              <span className="bg-background px-2 text-muted-foreground">рдпрд╛ / OR</span>
            </div>
          </div>

          <Button
            type="button"
            onClick={handleVoiceLogin}
            className="w-full h-16 text-xl font-bold bg-blue-600 hover:bg-blue-700 text-white shadow-lg border-2 border-blue-700"
          >
            ЁЯОЩя╕П {placeholders.voice} / Voice Login ЁЯОЩя╕П
          </Button>

          <div className="text-center">
            <p className="text-sm font-medium text-muted-foreground bg-green-50 p-3 rounded-lg border border-green-200">
              ЁЯУ▒ Works even without internet (via SMS & IVR)
              <br />
              <span className="text-xs">рдмрд┐рдирд╛ рдЗрдВрдЯрд░рдиреЗрдЯ рднреА рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ (SMS рдФрд░ IVR рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ)</span>
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
